---
title: "Kasmweb setup"
date: "2023-1-26"
categories: [nix, linux, devops, ubuntu, kasm]
---

Kasm is a remote desktop software.


Roadblocks/steps: 

* Install Kasm on Ubuntu
* Ensure remote server can be accessed
* Get persistent user profiles for remote server 
* Allow user to use nix to install software
    * Create a shared nix cache for users
* Create a custom dockerfile with: 
    * Nix preinstalled
    * Perhaps a different desktop type
* Optimize memory usage
    * Use kernel same page merging (ksm) to deduplicate ram
    * Use zram to optimize create  compressed swap device in ram, and use that instead of zswap, because it does not touch the disk at all, enabling a performance boost
    * Use VM overcommit or something else to make kasm launch when it currently thinks it doesn't have enough ram. 


# Step 1: Install and run kasm:

status: complete

Tested on Ubuntu 22. Working.

From [the kasm documenation](https://www.kasmweb.com/docs/latest/install/single_server_install.html)

Ignore the system requirements step. We are going to be sidestepping that with optimization.

Default passwords are randomly generated, and output exactly once when your run the installation script. Save them to a text file or something, just don't lose them. 

# Using kernel same page merging with docker
status: implemented on other systems, but without docker yet

Previously, I tried instructions from here: https://wiki.openvz.org/KSM_(kernel_same-page_merging). However, I noticed only a minimal space saved using the LD_PRELOAD steps. Not useful. 

I then tried cachyos fork of uksmd: https://github.com/CachyOS/uksmd, a daemon to go through userspace tasks and dedupe them.

Only works with a kernel that has the pmadv_ksm() syscall. Exists in most kernels optimized for desktop usage, like linux-zen, linux-liqourix, or pf-kernel (the original creators of uksmd)

To check if your currently running kernel has the feature:

* on Archlinux, check if the files `sys_enter_pmadv_ksm` and `sys_exit_pmadv_ksm` exist in `/sys/kernel/debug/tracing/events/syscalls` (default does not have this feature, but linux-zen does)
* on Ubuntu check if lines containing pmadv exist in the file `/proc/kallsyms` 


![uksmstats](uksmdstatsdesktop.png)

Half a gig of ram saved on a normal desktop. Expect to see much more when multiple almost identical docker containers are launched. Very useful. It saves a lot of ram. However, there might be a better way for docker, without jumping through hoops. 

Does cost a miniscule amount of cpu power, but we have more cpu power and less ram on our servers. 

To install uksmd on ubuntu, you need to switch kernels. 

## Switching Kernels

status: complete

`curl 'https://liquorix.net/install-liquorix.sh' | sudo bash` from the [liqourix kernel website](https://liquorix.net/)

I checked if liqourix has the necessary features, and yes it does. 

## Weaker alternative: ksm_preload

`git clone https://github.com/binfess/ksm_preload`

`cmake .`

`make`

`sudo make install`

I added `LD_PRELOAD=/usr/local/share/ksm_preload/libksm_preload.so` to the file `/etc/environment`

I haven't tested the above, but I saw very minimal space saved, only about 0.11 **megabytes* saved, on my desktop. Tests on my sample server are similarly discouraging:

![](ksmpreloadubuntu.png)

The above was with 2 kasm sessions open. Nearly useless. 

# Memory Overcommiting
status: complete

From a reddit comment: [kernel.org docs on allocating more memory than your system thinks it has](https://www.kernel.org/doc/Documentation/vm/overcommit-accounting)

Default vm overcommit on containers is set to 0, no overcommit:

![](defaultvmovercommit.png)

From my ubuntu 22 virtual machine. I changed this setting to 1, enabling overcommit.

However, it still did not work. In addition to that, you have to edit the kasm agent settings. In the kasm admin panel, you have to go to compute > docker agents > scroll to the right and edit the single agent. Then, change the memory override to however many gigabytes you want in **bytes**. 

![kasmagentsettings](agentsettings.png)

# Zswap/zram

status: immplemented on my personal systems, but not on the ubuntu vm yet.

![](zswap.png)

zswap is disabled by default on my ubuntu virtual machine.


To install zram (zram better), `sudo apt install systemd-zram-generator`

Then, you can configure zram by editing /etc/systemd/zram-generator.conf


# Customized kasm images
status: researching

[Building](https://www.kasmweb.com/docs/latest/how_to/building_images.html) and [maintaining](https://www.kasmweb.com/docs/latest/how_to/building_images.html) custom docker images


# Nix remote store

[Nixos wiki](https://nixos.wiki/wiki/Binary_Cache)

[Nix manual](https://nixos.org/manual/nix/stable/package-management/binary-cache-substituter.html)





