{
  "hash": "ade9d238a0578b9a771b1466cb4ba71a",
  "result": {
    "markdown": "---\naliases:\n- /frontend/binary\ncategories:\n- 3.B\n- 3.C\n- C4.4\ndate: '2022-07-07'\ndescription: A Binary Math illustrative application using HTML, Liquid, and JavaScript.\nlayout: default\npermalink: /frontend/binary\ntags:\n- html\n- liquid\n- javascript\ntitle: Binary Math\ntype: pbl\nweek: 13\nformat: html\n\n---\n\n```{html}\n<!-- Hack 1: add a character display to text when 8 bits, determine if printable or not printable -->\n<!-- Hack 2: change to 24 bits and add a color code and display color when 24 bits, think about display on this one -->\n<!-- Hack 3: do your own thing -->\n\n{% include nav_frontend.html %}\n{% assign BITS = 8 %}\n\n<div class=\"container bg-primary\">\n    <header class=\"pb-3 mb-4 border-bottom border-primary text-dark\">\n        <span class=\"fs-4\">Binary Math with Conversions</span>\n    </header>\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col-8\">\n            <table class=\"table\">\n            <tr id=\"table\">\n                <th>Plus</th>\n                <th>Binary</th>\n                <th>Octal</th>\n                <th>Hexadecimal</th>\n                <th>Decimal</th>\n                <th>Minus</th>\n            </tr>\n            <tr>\n                <td><button type=\"button\" id=\"add1\" onclick=\"add(1)\">+1</button></td>\n                <td id=\"binary\">00000000</td>\n                <td id=\"octal\">0</td>\n                <td id=\"hexadecimal\">0</td>\n                <td id=\"decimal\">0</td>\n                <td><button type=\"button\" id=\"sub1\" onclick=\"add(-1)\">-1</button></td>\n            </tr>\n            </table>\n        </div>\n        <div class=\"col-12\">\n            {% comment %}Liquid for loop includes last number, thus the Minus{% endcomment %}\n            {% assign bits = BITS | minus: 1 %} \n            <table class=\"table\">\n            <tr>\n                {% comment %}Build many bits{% endcomment %}\n                {% for i in (0..bits) %}\n                <td><img class=\"img-responsive py-3\" id=\"bulb{{ i }}\" src=\"{{site.baseurl}}/images/bulb_off.png\" alt=\"\" width=\"40\" height=\"Auto\">\n                    <button type=\"button\" id=\"butt{{ i }}\" onclick=\"javascript:toggleBit({{ i }})\">Turn on</button>\n                </td>\n                {% endfor %}\n            </tr>\n            <tr>\n                {% comment %}Value of bit{% endcomment %}\n                {% for i in (0..bits) %}\n                <td><input type='text' id=\"digit{{ i }}\" Value=\"0\" size=\"1\" readonly></td>\n                {% endfor %}\n            </tr>\n            </table>\n        </div>\n    </div>\n</div>\n\n<script>\n    const BITS = {{ BITS }};\n    const MAX = 2 ** BITS - 1;\n    const MSG_ON = \"Turn on\";\n    const IMAGE_ON = \"{{site.baseurl}}/images/bulb_on.gif\";\n    const MSG_OFF = \"Turn off\";\n    const IMAGE_OFF = \"{{site.baseurl}}/images/bulb_off.png\"\n\n    // return string with current value of each bit\n    function getBits() {\n        let bits = \"\";\n        for(let i = 0; i < BITS; i++) {\n        bits = bits + document.getElementById('digit' + i).value;\n        }\n        return bits;\n    }\n    // setter for DOM values\n    function setConversions(binary) {\n        document.getElementById('binary').innerHTML = binary;\n        // Octal conversion\n        document.getElementById('octal').innerHTML = parseInt(binary, 2).toString(8);\n        // Hexadecimal conversion\n        document.getElementById('hexadecimal').innerHTML = parseInt(binary, 2).toString(16);\n        // Decimal conversion\n        document.getElementById('decimal').innerHTML = parseInt(binary, 2).toString();\n    }\n    //\n    function decimal_2_base(decimal, base) {\n        let conversion = \"\";\n        // loop to convert to base\n        do {\n        let digit = decimal % base;\n        conversion = \"\" + digit + conversion; // what does this do?\n        decimal = ~~(decimal / base);         // what does this do?\n        } while (decimal > 0);                  // why while at the end? what is ~~?\n        // loop to pad with zeros\n        if (base === 2) {                        // only pad for binary conversions\n        for (let i = 0; conversion.length < BITS; i++) {\n            conversion = \"0\" + conversion;\n        }\n        }\n        return conversion;\n    }\n\n    // toggle selected bit and recalculate\n    function toggleBit(i) {\n        //alert(\"Digit action: \" + i );\n        const dig = document.getElementById('digit' + i);\n        const image = document.getElementById('bulb' + i);\n        const butt = document.getElementById('butt' + i);\n        // Change digit and visual\n        if (image.src.match(IMAGE_ON)) {\n        dig.value = 0;\n        image.src = IMAGE_OFF;\n        butt.innerHTML = MSG_ON;\n        } else {\n        dig.value = 1;\n        image.src = IMAGE_ON;\n        butt.innerHTML = MSG_OFF;\n        }\n        // Binary numbers\n        const binary = getBits();\n        setConversions(binary);\n    }\n    // add is positive integer, subtract is negative integer\n    function add(n) {\n        let binary = getBits();\n        // convert to decimal and do math\n        let decimal = parseInt(binary, 2);\n        if (n > 0) {  // PLUS\n        decimal = MAX === decimal ? 0 : decimal += n; // OVERFLOW or PLUS\n        } else  {     // MINUS\n        decimal = 0 === decimal ? MAX : decimal += n; // OVERFLOW or MINUS\n        }\n        // convert the result back to binary\n        binary = decimal_2_base(decimal, 2);\n        // update conversions\n        setConversions(binary);\n        // update bits\n        for (let i = 0; i < binary.length; i++) {\n        let digit = binary.substr(i, 1);\n        document.getElementById('digit' + i).value = digit;\n        if (digit === \"1\") {\n            document.getElementById('bulb' + i).src = IMAGE_ON;\n            document.getElementById('butt' + i).innerHTML = MSG_OFF;\n        } else {\n            document.getElementById('bulb' + i).src = IMAGE_OFF;\n            document.getElementById('butt' + i).innerHTML = MSG_ON;\n        }\n        }\n    }\n</script>\n\n```\n\n",
    "supporting": [
      "2022-07-07-PBL-binary_files"
    ],
    "filters": [],
    "includes": {}
  }
}